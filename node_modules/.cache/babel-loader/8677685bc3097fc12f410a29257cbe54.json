{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\test-assignment-scorum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nvar initialState = {};\nvar middleware = [thunk]; // const store = createStore(\n//   rootReducer,\n//   initialState, \n//   applyMiddleware(...middleware),\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   )\n\nexport var ConfigureStore = function ConfigureStore() {\n  var store = createStore(combineReducers(_objectSpread({\n    dishes: Dishes,\n    comments: Comments,\n    promotions: Promotions,\n    leaders: Leaders\n  }, createForms({\n    feedbackStore: Feedback\n  }))), applyMiddleware(thunk, logger));\n  return store;\n};\nexport default store;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\test-assignment-scorum\\src\\store.js"],"names":["createStore","applyMiddleware","compose","thunk","rootReducer","initialState","middleware","ConfigureStore","store","combineReducers","dishes","Dishes","comments","Comments","promotions","Promotions","leaders","Leaders","createForms","feedbackStore","Feedback","logger"],"mappings":";AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,OAApC,QAAkD,OAAlD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,IAAMC,YAAY,GAAE,EAApB;AAEA,IAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,GAAK;AACjC,MAAMC,KAAK,GAAGR,WAAW,CACtBS,eAAe;AACXC,IAAAA,MAAM,EAAEC,MADG;AAEXC,IAAAA,QAAQ,EAAGC,QAFA;AAGXC,IAAAA,UAAU,EAAEC,UAHD;AAIXC,IAAAA,OAAO,EAAEC;AAJE,KAKRC,WAAW,CAAC;AACXC,IAAAA,aAAa,EAAEC;AADJ,GAAD,CALH,EADO,EAWtBnB,eAAe,CAACE,KAAD,EAAOkB,MAAP,CAXO,CAAzB;AAaA,SAAOb,KAAP;AACD,CAfM;AAkBP,eAAeA,KAAf","sourcesContent":["import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState= {}\r\n\r\nconst middleware = [thunk]\r\n\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   initialState, \r\n//   applyMiddleware(...middleware),\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//   )\r\n\r\nexport const ConfigureStore = () =>{\r\n  const store = createStore(\r\n     combineReducers({\r\n         dishes :Dishes,\r\n         comments : Comments,\r\n         promotions: Promotions,\r\n         leaders: Leaders,\r\n         ...createForms({\r\n             feedbackStore: Feedback\r\n         })\r\n        \r\n     }),\r\n     applyMiddleware(thunk,logger)\r\n  );\r\n  return store;\r\n}\r\n\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}