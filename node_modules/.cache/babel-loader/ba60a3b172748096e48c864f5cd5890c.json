{"ast":null,"code":"import { GET_DOGS, DOG_LOADING, CURR_DOG } from './actionTypes';\nimport axios from 'axios';\nexport var getDogs = function getDogs() {\n  return function (dispatch) {\n    dispatch(setDogLoading());\n    axios.get('https://dog.ceo/api/breed/hound/images/random/15').then(function (res) {\n      return dispatch({\n        type: GET_DOGS,\n        payload: res.data.message\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_DOGS,\n        payload: {}\n      });\n    });\n  };\n};\nexport var currDog = function currDog(dog) {\n  return {\n    type: CURR_DOG,\n    payload: dog\n  };\n};\nexport var setDogLoading = function setDogLoading() {\n  return {\n    type: DOG_LOADING\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\test-assignment-scorum\\src\\actions\\dogsAction.js"],"names":["GET_DOGS","DOG_LOADING","CURR_DOG","axios","getDogs","dispatch","setDogLoading","get","then","res","type","payload","data","message","catch","err","currDog","dog"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,QAAhC,QAAgD,eAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAM,UAAAC,QAAQ,EAAI;AACvCA,IAAAA,QAAQ,CAACC,aAAa,EAAd,CAAR;AACAH,IAAAA,KAAK,CAACI,GAAN,CAAU,kDAAV,EAA8DC,IAA9D,CAAmE,UAAAC,GAAG;AAAA,aAAIJ,QAAQ,CAAC;AACjFK,QAAAA,IAAI,EAAEV,QAD2E;AAEjFW,QAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAASC;AAF+D,OAAD,CAAZ;AAAA,KAAtE,EAGIC,KAHJ,CAGU,UAAAC,GAAG;AAAA,aAAIV,QAAQ,CAAC;AACxBK,QAAAA,IAAI,EAAEV,QADkB;AAExBW,QAAAA,OAAO,EAAE;AAFe,OAAD,CAAZ;AAAA,KAHb;AAOD,GATsB;AAAA,CAAhB;AAUP,OAAO,IAAMK,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAS;AAC9B,SAAO;AACLP,IAAAA,IAAI,EAAER,QADD;AAELS,IAAAA,OAAO,EAAEM;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,IAAMX,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,SAAO;AACLI,IAAAA,IAAI,EAAET;AADD,GAAP;AAGD,CAJM","sourcesContent":["import { GET_DOGS, DOG_LOADING, CURR_DOG } from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getDogs = () => dispatch => {\r\n  dispatch(setDogLoading());\r\n  axios.get('https://dog.ceo/api/breed/hound/images/random/15').then(res => dispatch({\r\n    type: GET_DOGS,\r\n    payload: res.data.message\r\n  })).catch(err => dispatch({\r\n    type: GET_DOGS,\r\n    payload: {}\r\n  }))\r\n}\r\nexport const currDog = (dog) => {\r\n  return {\r\n    type: CURR_DOG,\r\n    payload: dog\r\n  };\r\n}\r\nexport const setDogLoading = () => {\r\n  return {\r\n    type: DOG_LOADING\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}